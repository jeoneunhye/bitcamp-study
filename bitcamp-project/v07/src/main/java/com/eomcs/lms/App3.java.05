package com.eomcs.lms;

import java.sql.Date;
import java.util.Scanner;

// 입력 카운트하기
public class App3 {
  public static void main(String[] args) {
    Scanner keyboard = new Scanner(System.in);
    // 게시글 데이터를 저장할 메모리를 설계한다.
    class Board {
      int no;
      String title;
      Date date;
      int viewCount;
    }
    
    final int SIZE = 100;
    
    Board[] boards = new Board[SIZE];
    // Board 레퍼런스 배열에 인스턴스의 주소를 담을 members 레퍼런스 배열 생성(준비)

    for (int i = 0; i < SIZE; i++) {
      new Board();  // 메모리 100개 만들기만 함. 보관할 곳이 없음 -> 위에 레퍼런스 만들어줌
    }
    // Board 인스턴스를 생성하여 레퍼런스 배열에 저장한다.

    int[] no = new int[100];
    String[] title = new String[100];
    Date[] date = new Date[100];
    int[] viewCount = new int[100];
    String response;

    int count = 0;
    for (int i = 0; i < 100; i++) {
      System.out.print("번호? ");
      boards[i].no = keyboard.nextInt();
      keyboard.nextLine(); // 줄바꿈 기호 제거용

      System.out.print("내용? ");
      boards[i].title = keyboard.nextLine();

      boards[i].date = new Date(System.currentTimeMillis());
      boards[i].viewCount = 0;
      
      count++;

      System.out.println("계속 입력하시겠습니까?(Y/n)");
      response = keyboard.nextLine();
      if (!response.equalsIgnoreCase("y")) {    // y가 아니라면
        break;
      }
    }
    keyboard.close();

    System.out.println();

    for (int i = 0; i < count; i++) {
      System.out.printf("%d, %s, %s, %d\n", no[i], title[i], date[i], viewCount[i]);
    }
  }
}
